# Production Environment Configuration for LinkedIn Scraper
# Copy this file to .env and update with your production values

# ==========================================
# ENVIRONMENT SETTINGS
# ==========================================
ENVIRONMENT=production
DEBUG=false
LOG_LEVEL=INFO

# ==========================================
# SECURITY CONFIGURATION
# ==========================================
# JWT Secret Key - Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=CHANGE_THIS_IN_PRODUCTION_TO_RANDOM_32_CHAR_STRING
JWT_EXPIRATION_HOURS=24

# API Security
API_SECRET_KEY=CHANGE_THIS_TO_RANDOM_SECRET_KEY

# CORS Configuration - Specify your frontend domains
ALLOWED_ORIGINS=https://yourdomain.com,https://api.yourdomain.com,https://admin.yourdomain.com

# Rate Limiting
RATE_LIMIT_PER_MINUTE=60

# ==========================================
# DATABASE CONFIGURATION
# ==========================================
# PostgreSQL Connection
DATABASE_URL=postgresql://username:password@localhost:5432/linkedin_scraper_prod

# Connection Pooling
DATABASE_POOL_SIZE=20
DATABASE_MAX_OVERFLOW=30

# ==========================================
# REDIS & CACHING
# ==========================================
REDIS_URL=redis://localhost:6379/0

# Celery Configuration
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# ==========================================
# LINKEDIN CREDENTIALS
# ==========================================
# Use dedicated scraping accounts
LINKEDIN_USERNAME=scraper.account@yourdomain.com
LINKEDIN_PASSWORD=secure_scraper_password

# ==========================================
# MONITORING & OBSERVABILITY
# ==========================================
ENABLE_METRICS=true
PROMETHEUS_PORT=9090

# Structured Logging
LOG_FILE=/var/log/linkedin_scraper/application.log

# ==========================================
# PERFORMANCE SETTINGS
# ==========================================
# Request delays (seconds)
MIN_REQUEST_DELAY=2
MAX_REQUEST_DELAY=5

# Concurrency limits
MAX_CONCURRENT_REQUESTS=5
REQUESTS_PER_MINUTE=30

# ==========================================
# INFRASTRUCTURE SETTINGS
# ==========================================
# Server configuration
API_HOST=0.0.0.0
API_PORT=8000

# Worker processes
WORKER_PROCESSES=4
WORKER_CONNECTIONS=1000

# ==========================================
# HEALTH CHECK CONFIGURATION
# ==========================================
HEALTH_CHECK_INTERVAL=30
HEALTH_CHECK_TIMEOUT=10

# Alert thresholds
CPU_ALERT_THRESHOLD=80
MEMORY_ALERT_THRESHOLD=85
QUEUE_SIZE_ALERT_THRESHOLD=1000